<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom"><id>https://github.com/enderTree/gitblog</id><title>RSS feed of enderTree's gitblog</title><updated>2025-06-24T09:47:51.689446+00:00</updated><link href="https://github.com/enderTree/gitblog"/><link href="https://raw.githubusercontent.com/enderTree/gitblog/master/feed.xml" rel="self"/><generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator><entry><id>https://github.com/enderTree/gitblog/issues/5</id><title>窗口函数的一些使用</title><updated>2025-06-24T09:47:51.889712+00:00</updated><content type="html"><![CDATA[<h4>1. 取最近一个不为空的值填充</h4>
<pre><code class="language-sql">WITH mian_data AS (
    SELECT
        c0,
        c1,
        IF(c1 = &#x27;处置&#x27;, NULL, c2) AS c2
    FROM
        VALUES
         (1,&#x27;处置&#x27;,&#x27;1&#x27;)
        ,(2,&#x27;处置&#x27;,&#x27;2&#x27;)
        ,(3,&#x27;处置&#x27;,&#x27;3&#x27;)
        ,(4,&#x27;处置&#x27;,&#x27;4&#x27;)
        ,(5,&#x27;提交&#x27;,&#x27;A&#x27;)
        ,(6,&#x27;处置&#x27;,&#x27;5&#x27;)
        ,(7,&#x27;提交&#x27;,&#x27;b&#x27;)
    AS a(c0,c1,c2)
)
SELECT 
    *,
    FIRST_VALUE(c2, True) over(order by c0 ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)
FROM 
    mian_data 
</code></pre>
]]></content><link href="https://github.com/enderTree/gitblog/issues/5"/><category term="sql"/><published>2025-06-24T08:55:19+00:00</published></entry><entry><id>https://github.com/enderTree/gitblog/issues/4</id><title>解决Join数据倾斜</title><updated>2025-06-24T09:47:52.003747+00:00</updated><content type="html"><![CDATA[<p>优化前：</p>
<pre><code>SELECT 
        /*+ mapjoin(dd),skewjoin(a(url))*/
        a.* except(url_tag, join_key),
        CASE 
            WHEN cc.url IS NOT NULL THEN &#x27;black_url&#x27;
            WHEN dd.url IS NOT NULL THEN &#x27;black_url&#x27;
            ELSE &#x27;&#x27;
        END AS url_tag
    FROM
    (
        select 
            *,
            1 AS join_key
        from 
            dwd_crawler_urls_step1_di a 
        where 
            ymd = &#x27;${P_DATE}&#x27;
            AND url_tag != &#x27;black_url&#x27;
    ) a
    LEFT JOIN 
        black_urls2 cc  
        ON replace(a.host, &#x27;www.&#x27;, &#x27;&#x27;) = replace(cc.url, &#x27;www.&#x27;, &#x27;&#x27;)
	LEFT JOIN 
        black_urls1 dd  
        ON INSTR(a.url, dd.url) &gt; 0
</code></pre>
<p>优化后</p>
<pre><code>SELECT 
        /*+ mapjoin(dd),skewjoin(a(url))*/
        a.* except(url_tag, join_key),
        CASE 
            WHEN cc.url IS NOT NULL THEN &#x27;black_url&#x27;
            WHEN dd.url IS NOT NULL THEN &#x27;black_url&#x27;
            ELSE &#x27;&#x27;
        END AS url_tag
    FROM
    (
        select 
            *,
            1 AS join_key
        from 
            dwd_crawler_urls_step1_di a 
        where 
            ymd = &#x27;${P_DATE}&#x27;
            AND url_tag != &#x27;black_url&#x27;
    ) a
    LEFT JOIN 
        black_urls1 dd  
        ON INSTR(a.url, dd.url) &gt; 0
    LEFT JOIN 
        black_urls2 cc  
        ON replace(a.host, &#x27;www.&#x27;, &#x27;&#x27;) = replace(cc.url, &#x27;www.&#x27;, &#x27;&#x27;)
</code></pre>
<p>优化前执行时间</p>
<img width="991" alt="Image" src="https://github.com/user-attachments/assets/3d62cdfd-b1e0-4579-adc9-a8bc19ac64ff" />
<img width="872" alt="Image" src="https://github.com/user-attachments/assets/46033d2f-9fbe-4400-b6c6-489f97ee7f00" />
<p>优化后执行时间</p>
<img width="978" alt="Image" src="https://github.com/user-attachments/assets/74de5fc3-08ff-4ed6-8c94-9b0d31c18799" />
<img width="944" alt="Image" src="https://github.com/user-attachments/assets/b2f397da-420d-484b-9655-3dda6ee57046" />
]]></content><link href="https://github.com/enderTree/gitblog/issues/4"/><category term="sql"/><published>2025-06-24T08:44:10+00:00</published></entry><entry><id>https://github.com/enderTree/gitblog/issues/3</id><title>全局排序优化</title><updated>2025-06-24T09:47:52.095070+00:00</updated><content type="html"><![CDATA[<pre><code class="language-sql">
CREATE TABLE talkie_dialogue.tmp_nana_data_1028_555 AS 
WITH hash_bucket AS (
    SELECT  
        *,
        ROW_NUMBER() OVER (PARTITION BY bucket_no ORDER BY user_msg_log_ucnt_30d ASC ) AS bucket_rel_index,
        COUNT(1) OVER (PARTITION BY bucket_no ) AS bucket_size
    FROM    
    (
        SELECT  
            *,
            ABS(HASH(cid)) % 100000 AS bucket_no 
        FROM    
            talkie_dialogue.tmp_nana_data_1028_4            
    ) 
),
bucket_base AS 
(
    SELECT
        bucket_no
        SUM(bucket_size) OVER (ORDER BY bucket_no ASC) - bucket_size AS bucket_base
    FROM
    (
        SELECT 
            bucket_no,
            bucket_size
        FROM
            hash_bucket
    )
)
SELECT
    /*+ MAPJOIN(t2) */ t1.*,
    t2.bucket_base + bucket_rel_index AS id_index
FROM
    hash_bucket t1 
JOIN 
    bucket_base t2 
    ON t1.bucket_no = t2.bucket_no
    AND t1.mid_rank = t2.mid_rank
    AND t1.country_rank = t2.country_rank
    AND t1.setting_type = t2.setting_type
;
</code></pre>
<p>核心代码如上，主要思路先做分桶进行分布式局部排序、再基于桶大小得到全局索引</p>
<ol>
<li>第一步先对id做hash分桶，然后计算每个桶的大小，桶数量可以根据需要计算的id数量来评估，这里分100000个桶，然后计算出每个id在桶内的相对位置bucket_rel_index，同时计算出桶大小bucket_size；</li>
<li>第二步根据桶大小计算每个桶的基址；</li>
<li>第三步将桶基址+id在桶内的相对地址得到全局唯一的绝对地址id_index；</li>
</ol>
]]></content><link href="https://github.com/enderTree/gitblog/issues/3"/><category term="sql"/><published>2025-06-24T08:16:42+00:00</published></entry></feed>